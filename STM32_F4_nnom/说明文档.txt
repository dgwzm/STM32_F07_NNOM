1、运行STM32_F4.py ，可以
训练python版本模型，keras，导入的数据集是mnist，是数据包自带的，不需要预处理。
2、分类是10分类
3、训练batch_size，128
4、损失函数 categorical_crossentropy，
5、优化器    adam
6、模型激活函数 ReLU

流程
1、调用数据集，将数据集分为训练集和测试集，训练集和测试集各多少？
(x_train, y_train), (x_test, y_test) = mnist.load_data()

2、数据集预处理，归一化，将数据集的数值转换到0-1之间，
    x_test = x_test.astype('float32')/255
    x_train = x_train.astype('float32')/255

3、生成模型，输的数据集格式是 ,，图片大小是 28x28
     ........
    x = Dense(10)(x)                           
    predictions = Softmax()(x)           
    model = Model(inputs=inputs, outputs=predictions)
    model.compile(loss='categorical_crossentropy',
                  optimizer='adam',
                  metrics=['accuracy'])
    model.summary()

4、将数据放到模型里，开始训练
    history = model.fit(x_train, y_train,
              batch_size=batch_size,
              epochs=epochs,
              verbose=2,
              validation_data=(x_test, y_test),
              shuffle=True)

5、保存模型，保存的路径是mnist_f4.h5文件，是python版本的模型
save_model(model, save_dir)

6、将python版本的模型转换为h文件，得到STM32_F4.h
enerate_model(model, np.vstack((x_train, x_test)), name=weights)

7、将STM32_F4.h复制到STM32工程中

